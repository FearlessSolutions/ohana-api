- title 'Report an issue'

- content_for :breadcrumbs do
  %span Report an Issue

= alert_tag(flash)

.about
  %main.main
    %div.about-container
      .contact
        %h1 Reporting an issue on #{@resource.name}
        .flag-form
          %section.feedback-form
            %br
            Thank you for sending us feedback about this resource.
            %br
            Please tell us more about the issue you identified.
            = form_for :flag, url: flag_path, html: { id: 'flag-form', role: 'form', class: 'form-container' } do |f|
              = hidden_field(:flag, :resource_type, value: @resource_type)
              = hidden_field(:flag, :resource_id, value: @resource_id)
              = f.fields_for :report_attributes do |rf|
                %br
                - Flag.report_attributes_schema.each do |attribute|
                  %p
                    = rf.check_box checkbox_name(attribute[:name]), class: "report-input-checkbox", id: checkbox_name(attribute[:name]), data: { "target-id" => attribute[:name], "required" => "#{raw attribute[:details_required]}" }, aria: { describedby: "#{attribute[:name]}_description" }
                    = rf.label attribute[:name], attribute[:label], class: "report-label", for: checkbox_name(attribute[:name])

                    - if attribute[:name] == :employee_of_the_org
                      - if user_signed_in?
                        = rf.email_field attribute[:name], value: current_user&.email, class: "js-input-field hidden", id: attribute[:name], autocomplete: "email", aria: { label: "Email address" }
                      -else
                        = rf.email_field attribute[:name], placeholder: "your.email@example.com", class: "js-input-field hidden", id: attribute[:name], autocomplete: "email", aria: { label: "Email address" }
                      = label_tag :email, "You must provide an email address and you agree to being contacted regarding the resource", class: 'search-hint hidden', id: 'email-label'
                    - else
                      - if attribute[:details_required] == true
                        = rf.text_area attribute[:name], placeholder: "Please describe (required).", class: "js-input-field hidden", id: attribute[:name], aria: { label: "Description of the issue" }
                      - elsif attribute[:details_required] != false
                        = rf.text_area attribute[:name], placeholder: "Please describe (optional).", class: "js-input-field hidden", id: attribute[:name], aria: { label: "Description of the issue" }

              = f.button 'Send!', class: 'button-plain', type:"submit", data: { disable_with: "Sending..." }, aria: { label: "Send" }

:javascript
  $(document).ready(function(){

    const $allCheckboxes = $(".flag-form input[type='checkbox']");

    $allCheckboxes.val('false');

    $allCheckboxes.on('click', function() {
      const $this = $(this);
      const textFieldTargetID = $(this).data('target-id');
      const $inputElement = $(`.js-input-field:input[id='${textFieldTargetID}']`);
      const $emailLabel = $('#email-label');
      const $orgEmployee = 'employee_of_the_org';

      if ($this.is(':checked')) {
        $this.val('true');
        $inputElement.removeClass('hidden');
        if (textFieldTargetID == $orgEmployee) {
          $emailLabel.removeClass('hidden');
        }
      } else {
        $this.val('false');
        $inputElement.addClass('hidden');
        if (textFieldTargetID == $orgEmployee) {
          $emailLabel.addClass('hidden');
        }
      }
    });

    $('#flag-form').on('submit', function() {
      const anyChecked = $('.report-input-checkbox').is(':checked');

      if (!anyChecked) {
        showErrorPopUp('Please check one of the feedback boxes before submitting.');
        return false;
      }

      const emptyRequiredFields = checkForEmptyRequiredFields();

      if (emptyRequiredFields.length > 0){
        showErrorPopUp('Please fill out the required form field.');
        return false;
      }
    });

    function showErrorPopUp(message){
      const alertDiv = $('<div>', {
        'class': 'sr-only',
        'role': 'alert',
        'aria-live': 'assertive',
        text: message
      });

      $('body').append(alertDiv);
      setTimeout(function() {
        alertDiv.remove();

        alert(message);
      }, 100);
    };

    function checkForEmptyRequiredFields() {
      let emptyFields = [];

      $(".report-input-checkbox[data-required='true']").each(function() {
        // is checkbox checked?
        if ($(this).prop('checked') == true){
          const textarea_id = "#" + $(this).attr('id').replace('_selected', '')
          // check if there is valid text in the text field
          if ($(textarea_id).val().length < 4) {
            emptyFields.push(textarea_id);
          }
        }
      });

      return emptyFields;
    };
  });
