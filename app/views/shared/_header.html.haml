%header#content-header
  %div.header-left
    %h1#logo
      %a{ href: '/', target: '_self', aria: { label: t('branding.logo') } }
        %img{ src: asset_path(SETTINGS[:site_logo]), alt: "#{SETTINGS[:site_title]} Logo" }
    %h2.header-title= t('branding.header', location: t('branding.location'))
  %button#hamburger{ aria: { label: 'Toggle navigation' } }
    %span
    %span
    %span
  %nav#nav-menu
    %ul.desktop-only
      %li
        %a.popup-trigger.popup-default.button-small.about-btn#about-btn{ href: '/about#about-box', aria: { label: t('navigation.list_your_services') } }
          = t('navigation.list_your_services')
      - if user_signed_in?
        %li
          %button.button-logged-in#user-btn{ aria: { label: t('navigation.expand_menu') }, tabindex: 0 }
            = current_user.first_name[0]&.upcase || current_user.email[0].upcase
          %ul.profile-dropdown.dropdown-menu#profile-dropdown
            %li
              %a{ href: '/favorites', aria: { label: t('navigation.favorites') } }
                = t('navigation.favorites')
            %li
              %a{ href: edit_user_registration_path, aria: { label: t('navigation.account_details') } }
                = t('navigation.account_details')
            %li
              = link_to t('navigation.sign_out'), destroy_user_session_path, method: 'delete', aria: { label: t('navigation.sign_out') }
      - else
        %li
          %a.popup-trigger.popup-account#user-btn{ href: new_user_session_path, aria: { label: t('users.login') } }
            = t('navigation.sign_in')
    %ul.mobile-only.dropdown-menu
      %li#translation-bar-mobile
        %span= t('navigation.translate_to')
        %a.translate-link{ href: '#', data: { lang: 'en' }, aria: { label: 'Translate page to English' } }
          %img{ src: asset_path('language_flags/english_language_flag.png'), alt: 'English' }
        %a.translate-link{ href: '#', data: { lang: 'ar' }, aria: { label: 'Translate page to Arabic' } }
          %img{ src: asset_path('language_flags/arabic_language_flag.png'), alt: 'Arabic' }
        %a.translate-link{ href: '#', data: { lang: 'zh-CN' }, aria: { label: 'Translate page to Chinese (Simplified)' } }
          %img{ src: asset_path('language_flags/chinese_simplified_language_flag.png'), alt: 'Chinese (Simplified)' }
        %a.translate-link{ href: '#', data: { lang: 'zh-TW' }, aria: { label: 'Translate page to Chinese ( Traditional)' } }
          %img{ src: asset_path('language_flags/chinese_traditional_language_flag.png'), alt: 'Chinese (Traditional)' }
        %a.translate-link{ href: '#', data: { lang: 'fr' }, aria: { label: 'Translate page to French' } }
          %img{ src: asset_path('language_flags/french_language_flag.png'), alt: 'French' }
        %a.translate-link{ href: '#', data: { lang: 'ko' }, aria: { label: 'Translate page to Korean' } }
          %img{ src: asset_path('language_flags/korean_language_flag.png'), alt: 'Korean' }
        %a.translate-link{ href: '#', data: { lang: 'es' }, aria: { label: 'Translate page to Spanish' } }
          %img{ src: asset_path('language_flags/spanish_language_flag.png'), alt: 'Spanish' }
      %li
        %a{ href: '/about#about-box', aria: { label: t('navigation.list_your_services ') } }
          = t('navigation.list_your_services')
      - if user_signed_in?
        %li
          %a{ href: '/favorites', aria: { label: t('navigation.favorites') } }
            = t('navigation.favorites')
        %li
          %a{ href: edit_user_registration_path, aria: { label: t('navigation.account_details') } }
            = t('navigation.account_details')
        %li
          = link_to t('navigation.sign_out'), destroy_user_session_path, method: 'delete', aria: { label: t('navigation.sign_out') }
      - else
        %li
          %a{ href: new_user_session_path, aria: { label: t('navigation.sign_in') } }
            = t('navigation.sign_in')
%div#translation-bar-desktop
  %span= t('navigation.translate_to')
  %a.translate-link{ href: '#', data: { lang: 'en' }, aria: { label: 'Translate to English' } }
    %img{ src: asset_path('language_flags/english_language_flag.png'), alt: 'English' }
  %a.translate-link{ href: '#', data: { lang: 'ar' }, aria: { label: 'Translate to Arabic' } }
    %img{ src: asset_path('language_flags/arabic_language_flag.png'), alt: 'Arabic' }
  %a.translate-link{ href: '#', data: { lang: 'zh-CN' }, aria: { label: 'Translate to Chinese (Simplified)' } }
    %img{ src: asset_path('language_flags/chinese_simplified_language_flag.png'), alt: 'Chinese (Simplified)' }
  %a.translate-link{ href: '#', data: { lang: 'zh-TW' }, aria: { label: 'Translate to Chinese (Traditional)' } }
    %img{ src: asset_path('language_flags/chinese_traditional_language_flag.png'), alt: 'Chinese (Traditional)' }
  %a.translate-link{ href: '#', data: { lang: 'fr' }, aria: { label: 'Translate to French' } }
    %img{ src: asset_path('language_flags/french_language_flag.png'), alt: 'French' }
  %a.translate-link{ href: '#', data: { lang: 'ko' }, aria: { label: 'Translate to Korean' } }
    %img{ src: asset_path('language_flags/korean_language_flag.png'), alt: 'Korean' }
  %a.translate-link{ href: '#', data: { lang: 'es' }, aria: { label: 'Translate to Spanish' } }
    %img{ src: asset_path('language_flags/spanish_language_flag.png'), alt: 'Spanish' }

- unless current_page?(root_path) || current_page?(new_user_session_path) || current_page?(new_user_registration_path) || current_page?(new_admin_session_path) || current_page?(new_admin_registration_path) || current_page?(new_user_password_path)
  %nav#breadcrumb
    .breadcrumb-content
      = link_to 'Home', root_path
      - if content_for?(:breadcrumbs)
        %span.breadcrumb-separator /
        = yield :breadcrumbs

:javascript
  (function() {
    var currentLang = 'en';

    function translatePage(lang) {
      if (currentLang === lang) return;
      
      var elements = document.getElementsByTagName('*');
      for (var i = 0; i < elements.length; i++) {
        var element = elements[i];
        if (element.id === 'map' || element.closest('#map') || element.classList.contains('map-related')) {
          continue;
        }
        if (element.childNodes.length === 1 && element.childNodes[0].nodeType === Node.TEXT_NODE) {
          translateElement(element, lang);
        }
        if (element.hasAttribute('placeholder')) {
            translatePlaceholder(element, lang);
          }        
      }
      currentLang = lang;
    }

    function translateElement(element, lang) {
      var text = element.textContent || element.innerText;
      if (text.trim().length <= 1 || /^\d+([.,]\d+)?$/.test(text.trim())) {
        return;
      }
      
      var sourceLang = currentLang;
      
      var url = 'https://translate.googleapis.com/translate_a/single?client=gtx&sl=' 
        + sourceLang + '&tl=' + lang + '&dt=t&q=' + encodeURIComponent(text);
      
      fetch(url)
        .then(response => response.json())
        .then(data => {
          if (data[0] && data[0][0] && data[0][0][0]) {
            element.textContent = data[0][0][0];
          }
        })
        .catch(error => console.error('Error:', error));
    }

    function translatePlaceholder(element, lang) {
      var placeholderText = element.getAttribute('placeholder');
      if (placeholderText.trim().length <= 1) {
        return;
      }
      
      var sourceLang = currentLang;
      
      var url = 'https://translate.googleapis.com/translate_a/single?client=gtx&sl=' 
        + sourceLang + '&tl=' + lang + '&dt=t&q=' + encodeURIComponent(placeholderText);
      
      fetch(url)
        .then(response => response.json())
        .then(data => {
          if (data[0] && data[0][0] && data[0][0][0]) {
            element.setAttribute('placeholder', data[0][0][0]);
          }
        })
        .catch(error => console.error('Error:', error));
    }    

    function initializeTranslation() {
      var languageLinks = document.querySelectorAll('.translate-link');
      
      languageLinks.forEach(function(link) {
        link.addEventListener('click', function(e) {
          e.preventDefault();
          var lang = this.getAttribute('data-lang');
          translatePage(lang);
        });
      });
    }

    // Use DOMContentLoaded for non-Turbolinks sites
    document.addEventListener('DOMContentLoaded', initializeTranslation);

    // Use turbolinks:load for Turbolinks-enabled sites
    document.addEventListener('turbolinks:load', initializeTranslation);
  })();