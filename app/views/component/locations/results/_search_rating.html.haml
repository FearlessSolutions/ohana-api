%div#rating-bar
  %p Do these results match what you are looking for?
  %span Please rate these search results from 1 star (No Match) to 5 stars (High Match).

  %div.stars
    - for i in 1..5 do
      %i.fa.fa-star-o{ tabindex: '0',
                       id: "#{i}-star",
                       class: "star",
                       role: 'button',
                       aria: {label: "#{i}-star rating"}}


:javascript
  $(document).ready(function() {

    $('.star').on('mouseenter', function() {
      starIndex = Number($(this).attr('id')[0]);
      solidStars(starIndex);
    });

    $('.star').on('mouseout', function() {
      outlineStars();
    });

    $('.star').on('click', function() {
      removeStarAnimations();
      removeRatingRow();

      searchRating = $(this).attr('id')[0];
      saveRating(searchRating);
    });

    function solidStars(starIndex) {
      for (let i = 1; i <= starIndex; i++) {
        $(`i\#${i}-star`)
          .removeClass('fa-star-o')
          .addClass('fa-star');
      }
    }

    function outlineStars() {
      $('.star')
        .removeClass('fa-star')
        .addClass('fa-star-o');
    }

    function removeStarAnimations() {
      $('.star')
        .off('mouseenter')
        .off('mouseout')
        .off('click');
    }

    function removeRatingRow() {
      $('#rating-bar').fadeOut(2500, function() {
        $(this).remove();
      });
    }

    function saveRating(searchRating){
      const csrfToken = document.querySelector('meta[name="csrf-token"]').getAttribute('content');

      $.ajax({
        type: 'POST',
        url: '/locations/set_search_rating',
        headers: {
          'X-CSRF-Token': csrfToken
        },
        data: { search_rating: searchRating},
        dataType: 'json',
        success: "Search rating saved successfully!",
        error: function(jqXHR, textStatus, errorThrown) {
          if (jqXHR.status === 422) {
            // Handle 422 error
            console.error('Unprocessable Entity:', jqXHR.responseJSON);
          } else {
            // Handle other errors, like for instance:
            // '400' : "Server understood the request, but request content was invalid.",
            // '401' : "Unauthorized access.",
            // '403' : "Forbidden resource can't be accessed.",
            // '500' : "Internal server error.",
            // '503' : "Service unavailable."
            console.error(textStatus, errorThrown);
          }
        }
      });
    }
  });
