%section#detail-info{ itemscope: '', itemtype: 'http://schema.org/Organization' }

  / Main detail content.
  %section.details-content

    = render 'component/locations/detail/header_summary', location: location

    %header
      - if location.featured
        = render 'component/detail/featured_location_badge'
      %hgroup
        %h1.name
          = link_to location_path(location), aria: { label: "#{superscript_ordinals(full_name_content_for(location))} - View details" } do
            = superscript_ordinals(full_name_content_for(location))
        - if location.organization.name && location.organization.name != location.name
          %h2.agency
            = link_to locations_path(org_name: location.organization.name), role: "link", aria: { label: "View all locations for #{superscript_ordinals(location.organization.name)}" } do
              = superscript_ordinals(location.organization.name)



    %section.overview-box
      = render 'component/detail/location_short_desc', location: location
      %hr
      .overview-flex-container
        .flex-column
          = render 'component/detail/audience', location: location
          = render 'component/detail/phones', phones: location.phones
          = render 'component/detail/address', location: location, lines: 2
          - if location.services.present?
            = render 'component/detail/service_list_items', location: location
        .flex-column
          = render 'component/detail/website', website: location.website
          = render 'component/detail/email', email: location.email
          - if location.regular_schedules.present?
            = render 'component/detail/location_regular_schedule', schedules: location.regular_schedules

    %section.general-information
      %h2 General Information
      %hr
      = render 'component/detail/location_description', location: location

    - if location.services.present?
      %section.services-box
        %h2 Services
        %hr
        %section.service-list{ itemscope: '', itemtype: 'http://schema.org/Service', id: "service-list" }
        - location.services.each_with_index do |service, i|
          - if (i%2).zero?
            %div.service-row.service-title-blue{ id: "service-row-#{i}", role: 'button', tabindex: '0', aria: {label: 'Expand/Collapse Section', expanded: 'false'} }
              = render 'component/detail/service_name', service: service, i: i
              = render 'component/detail/service_status', service: service
            %section.collapsed.service-details-card.service-title-blue{ id: "service-card-#{i}"}
              = render 'component/detail/service_details_card', service: service
          - else
            %div.service-row.service-title-grey{ id: "service-row-#{i}", role: 'button', tabindex: '0', aria: {label: 'Expand/Collapse Section', expanded: 'false'} }
              = render 'component/detail/service_name', service: service, i: i
              = render 'component/detail/service_status', service: service
            %section.collapsed.service-details-card.service-title-grey{ id: "service-card-#{i}"}
              = render 'component/detail/service_details_card', service: service
          - if i < location.services.length-1
            %hr.hr-service-divider

  / locations sidebar
  .location-sidebar-box
    %aside.location-sidebar

      - if location.coordinates.present?
        %section.map-box
          %div
            %section.map#detail-map-view
              #detail-map-canvas
                %span.hide#detail-map-canvas-title
                  = full_address_for(location.address)
                %span.hide#detail-map-canvas-lat
                  = location.latitude
                %span.hide#detail-map-canvas-lng
                  = location.longitude
            %noscript
              %p.map-alternative
                = "Map is not available because JavaScript is disabled. Please use the address below for directions."
                %br
                = full_address_for(location.address)
              :sass
                #detail-map-view
                  display: none

      - if location.coordinates.present?
        %br
        %span.directions.icon-text-block
          %a{ href: "https://maps.google.com/maps?saddr=current+location&daddr=#{full_address_for(location.address)}", target: '_blank', aria: { label: "Get directions to #{location.name}" } }
            %span{ role: "img", "aria-hidden": "true" }
              %i.fa.fa-map-marker.fa-lg
            %span.annotated-text-block Get Directions

      - if location.contacts.present?
        .sidebar-header
          %h1 Specific Contact
          %hr
        - location.contacts.each do |contact|
          %section.contact-box-specific.location-sidebar-section
            %section.icon-text-block
              %i.fa.fa-id-card{ aria: { hidden: 'true' } }
              %span.annotated-text-block
                %h4 Name
              %br
              %section.location-sidebar-content
                %section.contact-name-box
                  %section.contact-name
                    = contact.name
                  - if contact.title.present? || contact.department.present?
                    %section.contact-details.annotation
                      = contact_details_for(contact)

                = render 'component/detail/email', email: contact.email

                - if contact.phones.present?
                  %section.phones.location-sidebar-content-group
                    = render 'component/detail/phones', phones: contact.phones



      .sidebar-header
        %h1 Other Information
        %hr
      - if location[:transportation].present?
        %section.transportation-availability.location-sidebar-section
          = render 'component/detail/location_transportation', location: location

      - if location.holiday_schedules.present?
        %section.schedules-box.location-sidebar-section
          = render 'component/detail/location_holiday_schedule', schedules: location.holiday_schedules

      - if location.accessibility.present?
        %section.address-box.location-sidebar-section
          = render 'component/detail/accessibility', location: location

      - if location.file_uploads.present?
        %section.address-box.location-sidebar-section
          %h1= t('location_fields.file_uploads')
          = render 'component/detail/file_uploads', location: location

      - if location.tags.present?
        %section.tag-box.location-sidebar-section
          = render 'component/detail/tags', tags: location.tags

      %section.location-sidebar-footer
        %span.location-sidebar-content
        Last Updated: #{@location.updated_at.strftime("%B %d, %Y at %I:%M %p") }
        %a{ href: new_flag_path(resource_type: 'Location', resource_id: location.id) }
          Report an issue with this resource

:javascript
  $(document).ready(function(){

    // set favorite button to favorite or unfavorite
    function favoriteButton () {
      $('.favorite-toggle').removeClass("fa-heart").addClass("fa-heart-o").data('favorite', false);
    };

    function unfavoriteButton() {
      $('.favorite-toggle').removeClass("fa-heart-o").addClass("fa-heart").data('favorite', true);
    };

    var favorite = #{@favorite};

    if(favorite){
      unfavoriteButton();
    } else {
      favoriteButton();
    }

    var userId = #{@current_user_id};
    var locationId = #{@location.id};
    var locationName = "#{@location.name}";
    var locationUrl = "{@url}";
    var favoriteText = "favorite";
    var unfavoriteText = "unfavorite";
    var favoriteURL = '/favorite.json';
    var favoriteToggle = $('.favorite-toggle');

    $('.favorite-toggle').on('click', function(e){
      e.preventDefault();

      if(userId === 0){
        var message = "Please login or sign up to favorite this location";

        var alertDiv = $('<div>', {
          'class': 'sr-only',
          'role': 'alert',
          'aria-live': 'assertive',
          text: message
        });

        $('body').append(alertDiv);
        setTimeout(function() {
          alertDiv.remove();

          alert(message);
        }, 100);

        return;
      }

      if ($(e.target).data('favorite')) {
        // Location already favorited
        // Send ajax call
        $.ajax({
          type: "DELETE",
          url: favoriteURL,
          data: {
            favorite: {
              resource_id: locationId,
              resource_type: "location",
              user_id: userId,
              name: locationName,
              url: locationUrl
            }
          },
          success: function(data){
            favoriteButton();
          }
        });
      } else {
        $.ajax({
          type: "POST",
          url: favoriteURL,
          data: {
            favorite: {
              resource_id: locationId,
              resource_type: "location",
              user_id: userId,
              name: locationName,
              url: locationUrl
            }
          },
          success: function(data){
            unfavoriteButton();
          }
        });
      }
    });

  var _printButton;

  function initPrintButton() {
    _printButton = document.querySelector('.button-print');
    if(_printButton) {
      // Set event on print button and show the button.
      _printButton.addEventListener('click', _clickPrintButton, false);
      _printButton.classList.remove('hide');
    }
  }

  // Issue print command when print button is clicked.
  // @param evt [Object] The click event object.
  function _clickPrintButton(evt) {
    evt.preventDefault();

    const originalContents = document.body.innerHTML;
    document.querySelector('.favorite-toggle').remove();
    document.querySelector('.button-edit').remove();
    document.querySelector('.map-box').remove();

    [...document.querySelectorAll('.more')].map(e => e.click());
    [...document.querySelectorAll('.less')].map(e => e.parentElement.remove());

    if (document.querySelectorAll('.file_upload').length > 0 ) {
      document.querySelector('.file_upload').parentElement.remove();
    };

    const printContents = document.querySelector('#detail-info').innerHTML;

    document.body.innerHTML = printContents;

    window.print();
    window.location.reload()
    initPrintButton();
  }

  initPrintButton();


  document.querySelectorAll('.service-row').forEach( row => {
    row.addEventListener("click", toggleServiceCard);
    row.addEventListener("keydown", toggleServiceCard);
  });

  document.querySelectorAll('.service-item').forEach( item => {
    item.addEventListener("click", openServiceCard);
    item.addEventListener("keydown", openServiceCard);
  });


  // Open service details card
  function openServiceCard(e){
    if (e.type != 'click' && e.key != 'Enter'){
      return false;
    }

    const serviceRowId = e.target.id;
    const i = serviceRowId.split("-").pop();

    let chevron = document.getElementById(`service-chevron-${i}`);
    chevron.classList.add("fa-chevron-up");
    chevron.classList.remove("fa-chevron-down");

    let titleElement = document.getElementById(`service-title-${i}`);
    titleElement.classList.add("expanded");

    let alternateTitleElement = document.getElementById(`service-alt-${i}`);
    if (alternateTitleElement) {
      alternateTitleElement.classList.add("expanded");
    }

    let serviceCardElement = document.getElementById(`service-card-${i}`);
    serviceCardElement.classList.remove("collapsed");

    e.target.setAttribute("aria-expanded", "true");

    chevron.scrollIntoView({ alignToTop: true, behavior: "smooth"});
  }

  // Toggle service details card open or closed
  function toggleServiceCard(e){
    if (e.type != 'click' && e.key != 'Enter'){
      return false;
    }

    const serviceRowId = e.target.id;
    const i = serviceRowId.split("-").pop();

    let chevron = document.getElementById(`service-chevron-${i}`);
    chevron.classList.toggle("fa-chevron-down");
    chevron.classList.toggle("fa-chevron-up");

    let titleElement = document.getElementById(`service-title-${i}`);
    titleElement.classList.toggle("expanded");

    let alternateTitleElement = document.getElementById(`service-alt-${i}`);
    if (alternateTitleElement) {
      alternateTitleElement.classList.toggle("expanded");
    }

    let serviceCardElement = document.getElementById(`service-card-${i}`);
    serviceCardElement.classList.toggle("collapsed");

    e.target.setAttribute("aria-expanded", serviceCardElement.classList.contains("collapsed")? "false" : "true");
  }

  // reveal header search box
  document.getElementById('search-group').classList.remove('hidden');
  });
