# First, copy the contents of this file to a new file called "application.yml"
# in the same "config" directory.

# This file is used by the "figaro" gem to allow you to store and use
# environment variables in the app without having to set them via the
# command line each time you run the app in development. Another advantage
# is that you can make changes in a production environment (such as Heroku)
# by simply changing the value of the environment variable, as opposed to
# making code changes and having to push them to apply the new setting.
# Read more about figaro here: https://github.com/laserlemon/figaro

# Note that changes to this file require a server restart to take effect.

# Each entry sets a local environment variable and overrides ENV variables
# in the Unix shell. For example, setting `API_PATH: api` makes "api" available
# as ENV['API_PATH'] in the app. See app/config/routes.rb for a usage example.

# Below, you will find descriptions for each variable, followed by default
# settings for the development, production, and test environments.

####################################
#
# ENVIRONMENT VARIABLE DESCRIPTIONS
#
####################################

##############################
#
# DEFAULT_PER_PAGE - REQUIRED
#
##############################
# This setting controls how many results you want to the API to return
# per page by default. Note that clients can set this dynamically via
# the "per_page" parameter, but if "per_page" is not specified, then the
# setting below will dictate how many results are returned.

##########################
#
# MAX_PER_PAGE - REQUIRED
#
##########################
# This setting controls the maximum amount of results you want to the API to
# return per page. If a client sets the "per_page" parameter to a value higher
# than MAX_PER_PAGE, the API will limit results per page to MAX_PER_PAGE.

#############
#
# EXPIRES_IN
#
#############
# This setting defines how long, in minutes, API responses will be cached in
# Rack::Cache. During that time interval, any API requests for that same
# query (after the initial request) will be served by Rack::Cache instead
# of the app, thereby reducing the load on the API and serving responses
# quickly.
# Read more about HTTP Caching:
# http://railscasts.com/episodes/321-http-caching?view=asciicast
# https://devcenter.heroku.com/articles/http-caching-ruby-rails

######################################
#
# TLD_LENGTH - REQUIRED IN PRODUCTION
#
######################################
# When using the default Heroku domain setup (http://app-name.herokuapp.com),
# TLD_LENGTH should be set to "2". Once you're ready to deploy with a custom
# domain name (like "smc-connect.org"), you will need to set TLD_LENGTH to the
# number of dots in your top-level domain name, which will most likely be "1",
# but if you are using ".co.uk" for example, then you should set it to "2".

########################################
#
# ENABLE_HTTPS - REQUIRED IN PRODUCTION
#
########################################
# When using the default Heroku domain setup (http://app-name.herokuapp.com),
# you can take advantage of SSL for free. However, to use SSL with a custom
# domain name, you'll need to do some work first, as explained in the Wiki:
# https://github.com/codeforamerica/ohana-api/wiki/How-to-deploy-the-Ohana-API-to-your-Heroku-account#using-a-custom-domain-name-and-ssl-configuration

##########################################################################
#
# ADMIN_APP_TOKEN - REQUIRED TO ALLOW AN EXTERNAL APP TO WRITE TO THE API
#
##########################################################################
# This app comes with a built-in admin interface, but if you want to allow
# a trusted third-party application to write to the API, follow these steps:
# 1. Ask the developer to sign up for an account on your developer portal.
# By default, this will be the home page of your deployed website. For example:
# http://ohana-api-demo.herokuapp.com
# 2. Have them register an application on the portal and send you the API token
# that gets automatically generated.
# 3. Set ADMIN_APP_TOKEN to the API token that they sent you.
# 4. Tell the developer to send the same token in their app via the
# `X-Api-Token` HTTP header.

########################################
#
# DOMAIN_NAME - REQUIRED IN PRODUCTION
#
########################################
# This is the domain name of your website. For example, if you deployed the app
# to Heroku and did not set up a custom domain name, your DOMAIN_NAME will be
# app-name.herokuapp.com, where `app-name` is the name of your own Heroku app.
# If you have a custom domain name and you are using paths instead of subdomains
# (example.com/admin vs admin.example.com), and if your browser includes `www`
# in your website name when you visit it, make sure to include the `www` in
# DOMAIN_NAME, such as www.example.com. When setting up the DNS for your custom
# domain, make sure to redirect the naked subdomain to www, or vice versa.
# Otherwise, some parts of the app will not work properly.
# If you have a custom domain name and you are using subdomains, such as
# admin.example.com, make sure to set DOMAIN_NAME to the naked domain, such
# as example.com. Otherwise, if you set DOMAIN_NAME to www.example.com,
# you won't be able to visit admin.example.com.

########################################
#
# ASSET_HOST - REQUIRED IN PRODUCTION
#
########################################
# This is the host that serves your assets. If you deployed the app
# to Heroku and did not set up a separate server for assets (such as Cloudfront),
# your ASSET_HOST should be your Heroku domain, such as app-name.herokuapp.com.
# If you have a custom domain, set ASSET_HOST to the same value as DOMAIN_NAME.
# For more advanced users, if you will be using a CDN, you will need to replace
# AssetHosts#call with your own implementation.
# See: http://api.rubyonrails.org/classes/ActionView/Helpers/AssetUrlHelper.html
# for examples.

###########################
#
# SETTINGS FOR DEVELOPMENT
#
###########################
development:
  GOOGLE_MAPS_API_KEY:
  ASSET_HOST: sldev.me
  DEFAULT_PER_PAGE: '30'
  DOMAIN_NAME: sldev.me
  MAX_PER_PAGE: '50'
  OHANA_API_ENDPOINT: http://localhost:8080/api
  OHANA_ADMIN_ENDPOINT: http://localhost:8080/admin

###############################################################################
#
# SETTINGS FOR PRODUCTION.
#
# Run `figaro heroku:set -e production -a your_app_name` to set them on Heroku.
#
###############################################################################
production:
  ASSET_HOST: sldev.me
  DEFAULT_PER_PAGE: '30'
  DOMAIN_NAME: sldev.me
  MAX_PER_PAGE: '50'
  EXPIRES_IN: '1'
  TLD_LENGTH: '2'
  ENABLE_HTTPS: 'yes'
  OHANA_API_ENDPOINT: http://localhost:8080/api
  OHANA_ADMIN_ENDPOINT: http://localhost:8080/admin

###########################################
#
# SETTINGS FOR TESTS. PLEASE DO NOT MODIFY.
#
###########################################
test:
  ASSET_HOST: example.com
  DEFAULT_PER_PAGE: '30'
  DOMAIN_NAME: example.com
  MAX_PER_PAGE: '50'
  ADMIN_APP_TOKEN: testing123
  OHANA_API_ENDPOINT: http://localhost:8080/api
  OHANA_ADMIN_ENDPOINT: http://localhost:8080/admin
